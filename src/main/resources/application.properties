# DATABASE
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#24.20. Configurando o Spring Session Data Redis
#spring.session.store-type=none RedisConfig

#Habilitando erros na desserializa\u00E7\u00E3o de propriedades inexistentes ou ignoradas
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#8.26. Desafio tratando a exce\u00E7\u00E3o NoHandlerFoundException
#Habilitar o lan\u00E7amento da exce\u00E7\u00E3o e e informar ao spring boot p/ n\u00E3o registrar o manipulador
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#15.7. Formatando valores monet\u00E1rios com FTL
spring.freemarker.settings.locale=pt_BR

#19.38. Comprimindo as respostas HTTP com Gzip
server.compression.enabled=true

#23.45. Implementando o endpoint do JSON Web Key Set (JWKS)
#com o novo Spring Authorization Server foi alterado na aula 27.10 p/ /oauth2/jwks
#27.10. Configurando o Resource Server com token JWT
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/oauth2/jwks

#CORRECOES
#18.3. Gerando a defini\u00E7\u00E3o OpenAPI em JSON com SpringFox
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
#13.8. Implementando pagina\u00E7\u00E3o e ordena\u00E7\u00E3o em recursos de cole\u00E7\u00E3o da API
spring.data.web.pageable.default-page-size=5
#11.19. Estrat\u00E9gias de nomes de propriedades- snake case vs lower camel case
spring.jackson.property-naming-strategy=LOWER_CAMEL_CASE

#26.3. Adicionando o SpringDoc no projeto
springdoc.packages-to-scan=com.algaworks.algafood.api
springdoc.paths-to-match=/v1/**,/v2/**
#a configuracao de seguranca eh manual/escolhemos o fluxo auhtorization code
#o path de configuracao tambem eh manual e criada no SpringDocConfig
springdoc.oAuthFlow.authorizationUrl=http://127.0.0.1:8080/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=http://127.0.0.1:8080/oauth2/token
springdoc.swagger-ui.oauth.client-id=algafood-web
springdoc.swagger-ui.oauth.client-secret=web123


#27.3. Configura\u00E7\u00E3o inicial do Authorization Server com Access Token opaco
algafood.auth.provider-url=http://localhost:8080

#27.6. Configurando o Resource Server com token opaco
spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8080/oauth2/introspect
spring.security.oauth2.resourceserver.opaquetoken.client-id=algafood-backend
spring.security.oauth2.resourceserver.opaquetoken.client-secret=backend1230

#28.5. Atualizando o Spring Doc
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true
springdoc.swagger-ui.oauth2-redirect-url=http://127.0.0.1:8080/swagger-ui/oauth2-redirect.html




